version: '3.8'

# Define services
services:
  #rabbitmq:
  #  image: rabbitmq:3-management
  #  container_name: "rabbitmq"
  #  networks:
  #    - fullstack
  #  volumes:
  #    - ./rabbit-mq/rabbitmq.conf:/etc/rabbitmq/rabbitmq.conf:ro
  #  ports:
  #    - "15672:15672"
  #    - "5673:5673"
  #  healthcheck:
  #    test: [ "CMD", "rabbitmqctl", "status"]
  #    interval: 5s
  #    timeout: 15s
  #    retries: 5
  db:
    image: postgres:14-alpine
    container_name: "database"
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
      - POSTGRES_DB=${DB_NAME}
    networks:
      - fullstack
    volumes:
      - database_postgres:/var/lib/postgresql/data
      - ./init-database.sh:/docker-entrypoint-initdb.d/init-database.sh
  redis:
    container_name: "redis"
    image: redis:alpine
    command: redis-server /usr/local/etc/redis/redis.conf --requirepass ${REDIS_PASSWORD}
    ports:
      - ${REDIS_PORT}:6379
    volumes:
      - $PWD/redis.conf:/usr/local/etc/redis/redis.conf
    networks:
      - fullstack
  web:
    build: .
    container_name: "irrigation-api"
    environment:
      # postgres
      - DB_HOST=db
      - DB_USER=${DB_USER}
      - DB_PASSWORD=${DB_PASSWORD}
      - DB_NAME=${DB_NAME}
      # Redis
      - REDIS_PORT=${REDIS_PORT}
      - REDIS_PASSWORD=${REDIS_PASSWORD}
      # api
      - PORT=${PORT}
      - JWT_SECRET=${JWT_SECRET}
      # AWS S3
      - AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID}
      - AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY}
      - AWS_REGION=${AWS_REGION}
      - AWS_BUCKET=${AWS_BUCKET}
    ports:
      - ${PORT}:8000
    depends_on:
      - db
    networks:
      - fullstack


volumes:
  database_postgres:

networks:
  fullstack:
    driver: bridge